<!DOCTYPE HTML> 
<html>
    <head>
        <title>RepRapPro v0.17</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">

        <!-- Bootstrap -->
        <link href="//192.168.1.2/reprap/css/bootstrap.min.css" type="text/css" rel="stylesheet" />
        <link href="//192.168.1.2/reprap/css/main.css"  type="text/css" rel="stylesheet" />
        <link href="//192.168.1.2/reprap/favicon.ico" type="image/x-icon" rel="icon" />        
        <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
        <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
        <!--[if lt IE 9]>
          <script src="//oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
          <script src="//oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js"></script>
        <![endif]-->
        <style>
            div#surfacePlotDiv {
                margin-left: 100px;
                margin-top: 100px;
                border-style: solid;
                border-width: 2px;
                border-color: red;
                width: 510px;
                height: 510px;
            }   
        </style>
    </head>
    <body>

        <script id="shader-fs" type="x-shader/x-fragment">
            #ifdef GL_ES
            precision highp float;
            #endif
            varying vec4 vColor;
            varying vec3 vLightWeighting;
            void main(void)
            {
            gl_FragColor = vec4(vColor.rgb * vLightWeighting, vColor.a);
            }
        </script>
        <script id="shader-vs" type="x-shader/x-vertex">
            attribute vec3 aVertexPosition;
            attribute vec3 aVertexNormal;
            attribute vec4 aVertexColor;
            uniform mat4 uMVMatrix;
            uniform mat4 uPMatrix;
            uniform mat3 uNMatrix;
            varying vec4 vColor;
            uniform vec3 uAmbientColor;
            uniform vec3 uLightingDirection;
            uniform vec3 uDirectionalColor;
            varying vec3 vLightWeighting;
            void main(void)
            {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vec3 transformedNormal = uNMatrix * aVertexNormal;
            float directionalLightWeighting = max(dot(transformedNormal, uLightingDirection), 0.0);
            vLightWeighting = uAmbientColor + uDirectionalColor * directionalLightWeighting;
            vColor = aVertexColor;
            }
        </script>
        <script id="axes-shader-fs" type="x-shader/x-fragment">
            precision mediump float;
            varying vec4 vColor;
            void main(void)
            {
            gl_FragColor = vColor;
            }
        </script>
        <script id="axes-shader-vs" type="x-shader/x-vertex">
            attribute vec3 aVertexPosition;
            attribute vec4 aVertexColor;
            uniform mat4 uMVMatrix;
            uniform mat4 uPMatrix;
            varying vec4 vColor;
            uniform vec3 uAxesColour;
            void main(void)
            {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vColor =  vec4(uAxesColour, 1.0);
            }
        </script>
        <script id="texture-shader-fs" type="x-shader/x-fragment">
            #ifdef GL_ES
            precision highp float;
            #endif
            varying vec2 vTextureCoord;
            uniform sampler2D uSampler;
            void main(void)
            {
            gl_FragColor = texture2D(uSampler, vTextureCoord);
            }
        </script>
        <script id="texture-shader-vs" type="x-shader/x-vertex">
            attribute vec3 aVertexPosition;
            attribute vec2 aTextureCoord;
            varying vec2 vTextureCoord;
            uniform mat4 uMVMatrix;
            uniform mat4 uPMatrix;
            void main(void)
            {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vTextureCoord = aTextureCoord;
            }
        </script>


        <div id="surfacePlotDiv"></div>




        <!-- Bootstrap core JavaScript
        ================================================== -->
        <!-- Placed at the end of the document so the pages load faster -->
        <script src="//192.168.1.2/reprap/js/jquery-1.10.2.min.js"></script>
        <script src="//192.168.1.2/reprap/js/bootstrap.min.js"></script>
        <script src="//192.168.1.2/reprap/js/jquery.flot.min.js"></script>
        <script src="//192.168.1.2/reprap/js/jquery.filedrop.min.js"></script>  
        <script src="//webgl-surface-plot.googlecode.com/svn/trunk/javascript/SurfacePlot.js"></script>
        <script src="//webgl-surface-plot.googlecode.com/svn/trunk/javascript/ColourGradient.js"></script>
        <script src="//webgl-surface-plot.googlecode.com/svn/trunk/javascript/glMatrix-0.9.5.min.js"></script>
        <script src="//webgl-surface-plot.googlecode.com/svn/trunk/javascript/webgl-utils.js"></script>
        <script src="//192.168.1.2/reprap/js/reprap.js"></script> 
        <script src="//192.168.1.2/reprap/js/surface.js"></script> 
    </body>
</html>
<!-- **EoF** -->